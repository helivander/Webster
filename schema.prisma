datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "extendedWhereUnique"]
}

// Mantendo exatamente a mesma estrutura do User atual
model User {
  id               String    @id @default(uuid()) @db.Uuid
  email            String    @unique @db.VarChar(255)
  username         String    @db.VarChar(50)
  password         String    @db.VarChar(255)
  isEmailConfirmed Boolean   @default(false) @db.Boolean
  
  // Relacionamentos
  canvases         Canvas[]
  empresas         Empresa[]
  templates        Template[]
  encartes         Encarte[]
}

model Canvas {
  id          String    @id @default(uuid()) @db.Uuid
  author      User      @relation(fields: [authorId], references: [id])
  authorId    String    @db.Uuid
  name        String    @db.VarChar(50)
  description String    @db.VarChar(255)
  content     Json
  createdAt   DateTime  @default(now()) @db.Timestamp
  updatedAt   DateTime  @default(now()) @db.Timestamp
}

model Marca {
  id          String     @id @default(uuid()) @db.Uuid
  nome        String     @db.VarChar(100)
  logo        String?    @db.VarChar(400)
  descricao   String?    @db.VarChar(255)
  createdAt   DateTime   @default(now()) @db.Timestamp
  updatedAt   DateTime   @default(now()) @db.Timestamp
  deletedAt   DateTime?  @db.Timestamp
  
  // Relacionamentos
  produtos    Produto[]
}

model Produto {
  id            String     @id @default(uuid()) @db.Uuid
  marca         Marca      @relation(fields: [marcaId], references: [id])
  marcaId       String     @db.Uuid
  nome          String     @db.VarChar(100)
  preco         Decimal    @db.Decimal(10,2)
  descricao     String?    @db.VarChar(500)
  tags          String?    @db.VarChar(255)
  adicional     String?    @db.VarChar(255)
  foto1         String     @db.VarChar(400)
  foto2         String?    @db.VarChar(400)
  foto3         String?    @db.VarChar(400)
  tipo          String     @db.VarChar(50)
  barcode       String?    @db.VarChar(50)
  codsys        String?    @db.VarChar(50)
  descricaocurta String?   @db.VarChar(150)
  createdAt     DateTime   @default(now()) @db.Timestamp
  updatedAt     DateTime   @default(now()) @db.Timestamp
  deletedAt     DateTime?  @db.Timestamp

  // Relacionamentos
  encarteItems  EncarteItem[]
  produtoUsos   ProdutoUso[]
}

model Template {
  id               String    @id @default(uuid()) @db.Uuid
  nome             String    @db.VarChar(100)
  largura          Int
  altura           Int
  quantImagem      Int       @default(1)
  imgFundo         String?   @db.VarChar(400)
  fonte            String?   @db.VarChar(100)
  textoCabecalho   String?   @db.VarChar(500)
  textoRodape      String?   @db.VarChar(500)
  midia            TipoMidia
  dpi              Int?
  author           User      @relation(fields: [authorId], references: [id])
  authorId         String    @db.Uuid
  description      String?   @db.VarChar(255)
  conteudoJson     Json?
  carimboPreco     String?   @db.VarChar(100)
  carimboTituloProd String?  @db.VarChar(100)
  createdAt        DateTime  @default(now()) @db.Timestamp
  updatedAt        DateTime  @default(now()) @db.Timestamp
  deletedAt        DateTime? @db.Timestamp

  // Relacionamentos
  encartes         Encarte[]
}

model Empresa {
  id          String    @id @default(uuid()) @db.Uuid
  name        String    @db.VarChar(100)
  cnpj        String    @unique @db.VarChar(14)
  address     String    @db.VarChar(255)
  phone       String    @db.VarChar(20)
  email       String    @db.VarChar(100)
  logo        String?   @db.VarChar(400)
  description String?   @db.VarChar(500)
  createdAt   DateTime  @default(now()) @db.Timestamp
  updatedAt   DateTime  @default(now()) @db.Timestamp
  deletedAt   DateTime? @db.Timestamp
  usuario     User      @relation(fields: [usuarioId], references: [id])
  usuarioId   String    @db.Uuid

  // Relacionamentos
  encartes    Encarte[]
  produtoUsos ProdutoUso[]
}

model Encarte {
  id           String    @id @default(uuid()) @db.Uuid
  user         User      @relation(fields: [userId], references: [id])
  userId       String    @db.Uuid
  template     Template  @relation(fields: [modelId], references: [id])
  modelId      String    @db.Uuid
  empresa      Empresa   @relation(fields: [empresaId], references: [id])
  empresaId    String    @db.Uuid
  encarteJson  Json?
  avisosEncarte String?  @db.Text
  createdAt    DateTime  @default(now()) @db.Timestamp
  updatedAt    DateTime  @default(now()) @db.Timestamp
  deletedAt    DateTime? @db.Timestamp

  // Relacionamentos
  encarteItems EncarteItem[]
}

model EncarteItem {
  id           String    @id @default(uuid()) @db.Uuid
  produto      Produto   @relation(fields: [produtoId], references: [id])
  produtoId    String    @db.Uuid
  encarte      Encarte   @relation(fields: [projetoId], references: [id])
  projetoId    String    @db.Uuid
  valor        Decimal   @db.Decimal(10,2)
  valorPromo   Decimal?  @db.Decimal(10,2)
  valorAntigo  Decimal?  @db.Decimal(10,2)
  regraCompra  String?   @db.VarChar(255)
  validadeProd DateTime? @db.Date
  createdAt    DateTime  @default(now()) @db.Timestamp
  updatedAt    DateTime  @default(now()) @db.Timestamp
  deletedAt    DateTime? @db.Timestamp
}

model ProdutoUso {
  id           String    @id @default(uuid()) @db.Uuid
  ultimoValor  Decimal   @db.Decimal(10,2)
  descPerson   String?   @db.VarChar(255)
  produto      Produto   @relation(fields: [produtoId], references: [id])
  produtoId    String    @db.Uuid
  empresa      Empresa   @relation(fields: [empresaId], references: [id])
  empresaId    String    @db.Uuid
  ultimoPreco  Decimal   @db.Decimal(10,2)
  createdAt    DateTime  @default(now()) @db.Timestamp
  updatedAt    DateTime  @default(now()) @db.Timestamp
  deletedAt    DateTime? @db.Timestamp
}

enum TipoMidia {
  D // Digital
  I // Impresso
  V // Video
} 